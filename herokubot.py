#!/usr/bin/env python
# -*- coding: utf-8 -*-

import logging
import os

from telegram import (InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove)
from telegram.ext import (Updater, CommandHandler, MessageHandler, Filters,
                          ConversationHandler)

# Enable logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)


def start(update, context):
    keyboard = [[InlineKeyboardButton('–Ø —Å–ø–∏–∫–µ—Ä', callback_data='SPEAKER'),
                 InlineKeyboardButton('–Ø –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä', callback_data='MANAGER')]]

    reply_keyboard = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(
        '–ü—Ä–∏–≤–µ—Ç {username}!\n\n'
        '–≠—Ç–æ Speakers Team ‚Äî —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–ª—è –≤—Å–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –∏ –≥–æ—Ç–æ–≤ –≤—ã—Å—Ç—É–ø–∞—Ç—å –Ω–∞ '
        '–ø—Ä–æ—Ñ–∏–ª—å–Ω—ã—Ö –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è—Ö –∏ –º–∏—Ç–∞–ø–∞—Ö. –ò –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏—â—É—Ç –∫—Ä—É—Ç—ã—Ö '
        '—Å–ø–∏–∫–µ—Ä–æ–≤.\n\n'
        '1. –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ –∏–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏.\n\n'
        '2. –ü–æ–ª—É—á–∞–π –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–π –∏–ª–∏ —Ä–µ–∑—é–º–µ —Å–ø–∏–∫–µ—Ä–æ–≤,'
        '–∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã –≤—ã—Å—Ç—É–ø–∞—Ç—å.\n\n',
        '3. –ü—Ä–æ–∫–∞—á–∏–≤–∞–π —Å–≤–æ—é —Ä–µ–ø—É—Ç–∞—Ü–∏—é –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –∫–∞–∫ —Å–ø–∏–∫–µ—Ä –∏–ª–∏ '
        '–±—Ä–µ–Ω–¥ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è –∫–∞–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä üôÇ.\n\n'
        '–í—Å–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å üëá',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True))


def help_command(update, context):
    update.message.reply_text('Help!')


def echo(update, context):
    update.message.reply_text(update.message.text)


def error(update, context):
    logger.warning('Update "%s" caused error "%s"', update, context.error)


def main():
    TOKEN = os.environ.get('TOKEN')
    NAME = os.environ.get('NAME')
    PORT = os.environ.get('PORT')

    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # Add handlers
    dp.add_handler(CommandHandler('start', start))
    dp.add_handler(CommandHandler('help', help_command))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, echo))
    dp.add_error_handler(error)

    # Start the webhook
    updater.start_webhook(listen="0.0.0.0",
                          port=int(PORT),
                          url_path=TOKEN)
    updater.bot.setWebhook("https://{}.herokuapp.com/{}".format(NAME, TOKEN))
    updater.idle()


if __name__ == "__main__":
    main()
